{"version":3,"sources":["common/shuffleArray.js","constants/types.js","actions/steps.js","api/GameService.js","constants/status.js","containers/wrappedGame.js","containers/wrappedLayout.js","components/Button/index.js","components/Button/Button.jsx","components/Spinner/Spinner.js","components/Spinner/index.js","components/Game/GameInitial/index.js","components/Game/GameInitial/GameInitial.jsx","components/Game/GameResult/index.js","components/Game/GameResult/GameResult.jsx","constants/prefixes.js","components/MenuButton/MenuButton.jsx","components/Game/GamePanel/index.js","components/Game/GamePanel/GamePanel.jsx","common/formatPrice.js","components/Game/GameSteps/index.js","components/Game/GameSteps/GameSteps.jsx","components/Game/Game.js","components/Game/index.js","reducers/game.js","reducers/index.js","store.js","index.js"],"names":["shuffleArray","arr","sort","Math","random","gameService","CONFIG","fetch","this","res","ok","Error","status","json","body","TransformedAnswer","value","answer","transformSteps","steps","transformed","forEach","step","cost","initGameSession","questions","currentSteps","currentQuestions","key","currentGroup","currentGroupMax","length","selectedQuestions","slice","hasOwnProperty","el","idx","id","reverse","transformQuestion","question","answers","shuffledAnswers","correct","incorrect","transformedAnswers","composedWrappedGame","compose","connect","game","score","currentQuestion","gameStatus","currentStep","canSelect","debug","dispatch","getConfig","type","payload","then","data","catch","error","fetchData","initialGameSession","getState","getQuestion","sessionQuestions","setStep","checkAnswer","correctAnswer","includes","setTimeout","nextStep","resetGame","Component","props","className","touch","matchMedia","matches","wrappedLayout","config","image","parallax","backgroundFigure","useState","left","top","cursorPosition","setCursorPosition","figurePosition","setFigurePosition","isLoaded","useEffect","document","addEventListener","e","pageX","pageY","removeEventListener","update","start","end","duration","range","stepTime","abs","floor","max","timer","endTime","Date","getTime","run","now","remaining","round","clearInterval","setInterval","stepped","getPosition","speed","MOVE_SPEED","x","y","transform","style","src","alt","Button","event","children","onClick","Spinner","GameInitial","loader","render","GameResult","win","find","PREFIXES","MenuButton","openMenu","GamePanel","panelSteps","list","map","toString","replace","GameSteps","setOpenMenu","join","stopPropagation","handleSelect","wrappedGame","Game","localStorage","getItem","initialState","rootReducer","combineReducers","state","action","message","correctAnswers","correctIdxs","indexs","findIndex","push","composeEnhancers","store","createStore","applyMiddleware","thunk","logger","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6aac868a.chunk.js","sourcesContent":["export function shuffleArray(arr) {\r\n  return [...arr].sort(() => 0.5 - Math.random());\r\n}\r\n","export const GET_CONFIG_REQUEST = \"GET_CONFIG_REQUEST\";\r\nexport const GET_CONFIG_SUCCESS = \"GET_CONFIG_SUCCESS\";\r\nexport const GET_CONFIG_FAIL = \"GET_CONFIG_FAIL\";\r\nexport const INITIAL_GAME_SESSION = \"INITIAL_GAME_SESSION\";\r\nexport const GET_QUESTION = \"GET_QUESTION\";\r\nexport const SET_STEP = \"SET_STEP\";\r\n\r\nexport const HANDLE_ANSWER_START = \"HANDLE_ANSWER_START\";\r\nexport const HANDLE_ANSWER_SUCCESS = \"HANDLE_ANSWER_SUCCESS\";\r\nexport const HANDLE_ANSWER_FAIL = \"HANDLE_ANSWER_FAIL\";\r\n\r\nexport const SET_END_GAME = \"SET_END_GAME\";\r\nexport const RESET_GAME = \"RESET_GAME\";\r\n","import GameService from \"../api/GameService\";\r\nimport { shuffleArray } from \"../common/shuffleArray\";\r\nimport { ANSWER_UNSELECTED_STATUS, STEP_OPEN_STATUS } from \"../constants/status\";\r\nimport {\r\n  GET_CONFIG_FAIL,\r\n  GET_CONFIG_REQUEST,\r\n  GET_CONFIG_SUCCESS,\r\n  GET_QUESTION,\r\n  HANDLE_ANSWER_FAIL,\r\n  HANDLE_ANSWER_START,\r\n  HANDLE_ANSWER_SUCCESS,\r\n  INITIAL_GAME_SESSION,\r\n  SET_END_GAME,\r\n  SET_STEP,\r\n  RESET_GAME,\r\n} from \"../constants/types\";\r\n\r\nconst gameService = new GameService();\r\nconst DELAY_ANSWER = 2000;\r\nexport function fetchData(debug) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_CONFIG_REQUEST,\r\n      payload: debug,\r\n    });\r\n\r\n    gameService\r\n      .getConfig()\r\n      .then(data => {\r\n        dispatch({\r\n          type: GET_CONFIG_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: GET_CONFIG_FAIL,\r\n          payload: new Error(\"Fetch error\"),\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\n// function TransformedStep(value) {\r\n//   this.cost = value;\r\n//   this.status = STEP_OPEN_STATUS;\r\n// }\r\n\r\nfunction TransformedAnswer(value) {\r\n  this.answer = value;\r\n  this.status = ANSWER_UNSELECTED_STATUS;\r\n}\r\n\r\nconst transformSteps = steps => {\r\n  let transformed = [];\r\n\r\n  steps.forEach(step => {\r\n    transformed = [...transformed, { cost: step, status: STEP_OPEN_STATUS }];\r\n  });\r\n\r\n  return transformed;\r\n};\r\n\r\nfunction initGameSession(steps, questions) {\r\n  let currentSteps = [];\r\n  let currentQuestions = [];\r\n\r\n  for (const key in steps) {\r\n    const currentGroup = questions[key];\r\n    const currentGroupMax = steps[key].length;\r\n    const shuffledQuestions = shuffleArray(currentGroup);\r\n    const selectedQuestions = shuffledQuestions.slice(0, currentGroupMax);\r\n    currentQuestions = [...currentQuestions, ...selectedQuestions];\r\n\r\n    if (steps.hasOwnProperty(key)) {\r\n      currentSteps = [...currentSteps, ...transformSteps(steps[key])];\r\n    }\r\n  }\r\n\r\n  currentSteps.forEach((el, idx) => {\r\n    el.id = idx;\r\n  });\r\n\r\n  return {\r\n    steps: currentSteps.reverse(),\r\n    questions: currentQuestions,\r\n  };\r\n}\r\n\r\nexport function initialGameSession() {\r\n  return (dispatch, getState) => {\r\n    let {\r\n      game: {\r\n        data: { questions, steps },\r\n      },\r\n    } = getState();\r\n\r\n    dispatch({\r\n      type: INITIAL_GAME_SESSION,\r\n      payload: initGameSession(steps, questions),\r\n    });\r\n  };\r\n}\r\n\r\nconst transformQuestion = ({ question, answers }) => {\r\n  const shuffledAnswers = shuffleArray([...answers.correct, ...answers.incorrect]);\r\n\r\n  let transformedAnswers = [];\r\n  shuffledAnswers.forEach(answer => {\r\n    transformedAnswers = [...transformedAnswers, new TransformedAnswer(answer)];\r\n  });\r\n\r\n  return {\r\n    question: question,\r\n    correct: answers.correct,\r\n    answers: transformedAnswers,\r\n  };\r\n};\r\n\r\nexport function getQuestion() {\r\n  return (dispatch, getState) => {\r\n    const {\r\n      game: { sessionQuestions, currentStep },\r\n    } = getState();\r\n\r\n    dispatch({\r\n      type: GET_QUESTION,\r\n      payload: transformQuestion(sessionQuestions[currentStep]),\r\n    });\r\n  };\r\n}\r\n\r\nexport function togglePanelStep() {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: SET_STEP,\r\n      payload: getState().game.currentStep,\r\n    });\r\n  };\r\n}\r\n\r\nexport function checkAnswer(answer, idx) {\r\n  return (dispatch, getState) => {\r\n    const {\r\n      game: { currentQuestion, canSelect, currentStep, sessionQuestions, steps },\r\n    } = getState();\r\n\r\n    if (!canSelect) return;\r\n\r\n    const correctAnswer = currentQuestion.correct.includes(answer);\r\n\r\n    dispatch({\r\n      type: HANDLE_ANSWER_START,\r\n      payload: idx,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      if (correctAnswer) {\r\n        dispatch({\r\n          type: HANDLE_ANSWER_SUCCESS,\r\n          payload: idx,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          let nextStep = currentStep + 1;\r\n          const totalSteps = steps.length - 1;\r\n\r\n          if (nextStep <= totalSteps) {\r\n            dispatch({\r\n              type: SET_STEP,\r\n              payload: nextStep,\r\n            });\r\n\r\n            dispatch({\r\n              type: GET_QUESTION,\r\n              payload: transformQuestion(sessionQuestions[nextStep]),\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: SET_END_GAME,\r\n            });\r\n          }\r\n        }, DELAY_ANSWER);\r\n      } else {\r\n        dispatch({\r\n          type: HANDLE_ANSWER_FAIL,\r\n          payload: idx,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: SET_END_GAME,\r\n          });\r\n        }, DELAY_ANSWER);\r\n      }\r\n    }, DELAY_ANSWER);\r\n  };\r\n}\r\n\r\nexport function resetGame() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: RESET_GAME,\r\n    });\r\n  };\r\n}\r\n","export default class GameService {\r\n  CONFIG = \"./config.json\";\r\n\r\n  async getConfig() {\r\n    const res = await fetch(`${this.CONFIG}`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch, received ${res.status}`);\r\n    }\r\n\r\n    const body = await res.json();\r\n    return body;\r\n  }\r\n}\r\n","export const IDLE_STATUS = \"idle\";\r\nexport const LOADING_STATUS = \"loading\";\r\nexport const SUCCESS_STATUS = \"success\";\r\nexport const FAILURE_STATUS = \"failure\";\r\nexport const GAME_START_STATUS = \"game_start\";\r\nexport const GAME_PLAY_STATUS = \"game_play\";\r\nexport const GAME_END_STATUS = \"game_end\";\r\n\r\nexport const STEP_OPEN_STATUS = \"is-open\";\r\nexport const STEP_DISABLED_STATUS = \"is-disabled\";\r\nexport const STEP_ACTIVE_STATUS = \"is-active\";\r\n\r\nexport const ANSWER_UNSELECTED_STATUS = \"is-unselected\";\r\nexport const ANSWER_SELECTED_STATUS = \"is-selected\";\r\nexport const ANSWER_SUCCESS_STATUS = \"is-success\";\r\nexport const ANSWER_FAILURE_STATUS = \"is-failure\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  checkAnswer,\r\n  fetchData,\r\n  getQuestion,\r\n  initialGameSession,\r\n  resetGame,\r\n  togglePanelStep,\r\n} from \"../actions/steps\";\r\n\r\nconst wrappedGame = Component => {\r\n  const Wrapped = ({ ...props }) => {\r\n    return (\r\n      <div className=\"wrapped\">\r\n        <Component {...props} />\r\n      </div>\r\n    );\r\n  };\r\n  return Wrapped;\r\n};\r\n\r\nconst mapStateToProps = ({ game }) => {\r\n  const {\r\n    status,\r\n    score,\r\n    steps,\r\n    currentQuestion,\r\n    gameStatus,\r\n    currentStep,\r\n    canSelect,\r\n    debug,\r\n  } = game;\r\n  return {\r\n    status,\r\n    gameStatus,\r\n    score,\r\n    steps,\r\n    currentQuestion,\r\n    currentStep,\r\n    canSelect,\r\n    debug,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getConfig: debug => dispatch(fetchData(debug)),\r\n    initialGameSession: () => dispatch(initialGameSession()),\r\n    getQuestion: () => dispatch(getQuestion()),\r\n    setStep: () => dispatch(togglePanelStep()),\r\n    checkAnswer: (answer, idx) => dispatch(checkAnswer(answer, idx)),\r\n    resetGame: () => dispatch(resetGame()),\r\n  };\r\n};\r\n\r\nconst composedWrappedGame = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  wrappedGame,\r\n);\r\n\r\nexport default composedWrappedGame;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./wrappedLayout.scss\";\r\nimport { SUCCESS_STATUS } from \"../constants/status\";\r\n\r\nconst touch = matchMedia(\"(hover: none)\").matches;\r\n\r\nconst wrappedLayout = config => Component => {\r\n  const { image, parallax, backgroundFigure } = config;\r\n\r\n  function stepped(update, start, end, duration) {\r\n    const range = end - start;\r\n    const minTimer = 50;\r\n\r\n    let stepTime = Math.abs(Math.floor(duration / range));\r\n    stepTime = Math.max(stepTime, minTimer);\r\n\r\n    const startTime = new Date().getTime();\r\n    const endTime = startTime + duration;\r\n    let timer;\r\n\r\n    function run() {\r\n      const now = new Date().getTime();\r\n      const remaining = Math.max((endTime - now) / duration, 0);\r\n      const value = Math.round(end - remaining * range);\r\n\r\n      update(value + \"%\");\r\n\r\n      if (value === end) {\r\n        clearInterval(timer);\r\n      }\r\n    }\r\n    timer = setInterval(run, stepTime);\r\n    run();\r\n  }\r\n\r\n  const Wrapped = ({ ...props }) => {\r\n    const [cursorPosition, setCursorPosition] = useState({ left: 0, top: 0 });\r\n    const [figurePosition, setFigurePosition] = useState(\"100%\");\r\n\r\n    const { status } = props;\r\n    const isLoaded = status === SUCCESS_STATUS;\r\n\r\n    useEffect(() => {\r\n      if (!parallax) return;\r\n      if (touch) return;\r\n\r\n      document.addEventListener(\"mousemove\", e => {\r\n        setCursorPosition({ left: e.pageX, top: e.pageY });\r\n      });\r\n\r\n      return () => {\r\n        document.removeEventListener(\"mousemove\", null);\r\n      };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      if (isLoaded) {\r\n        stepped(setFigurePosition, 100, 50, 500);\r\n      }\r\n    }, [isLoaded]);\r\n\r\n    const getPosition = speed => {\r\n      if (!parallax) return {};\r\n      const MOVE_SPEED = speed;\r\n      let x = cursorPosition.left * MOVE_SPEED;\r\n      let y = cursorPosition.top * MOVE_SPEED;\r\n\r\n      return {\r\n        transform: `translate(${x}px, ${y}px)`,\r\n      };\r\n    };\r\n\r\n    return (\r\n      <section className=\"game-section\" style={{ \"--figure\": `${figurePosition}` }}>\r\n        {image && isLoaded && (\r\n          <div className=\"game-section__image-container\">\r\n            <img\r\n              className=\"game-section__image\"\r\n              style={getPosition(0.03)}\r\n              src=\"./images/hand.svg\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {backgroundFigure && (\r\n          <div className=\"game-section__figure\" style={getPosition(0.015)}></div>\r\n        )}\r\n\r\n        <div className=\"game-section__content\">\r\n          <Component {...props} />\r\n        </div>\r\n      </section>\r\n    );\r\n  };\r\n  return Wrapped;\r\n};\r\n\r\nexport default wrappedLayout;\r\n","import Button from \"./Button\";\n\nexport default Button;\n","import React from \"react\";\nimport \"./Button.scss\";\n\nconst Button = ({ event, children }) => (\n  <button onClick={event} className=\"button\">\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\r\nimport \"./Spinner.scss\";\r\n\r\nfunction Spinner() {\r\n  return <div className=\"spinner\">loading...</div>;\r\n}\r\n\r\nexport default Spinner;\r\n","import Spinner from \"./Spinner\";\r\n\r\nexport default Spinner;\r\n","import GameInitial from \"./GameInitial\";\n\nexport default GameInitial;\n","import React from \"react\";\nimport {\n  FAILURE_STATUS,\n  LOADING_STATUS,\n  SUCCESS_STATUS,\n} from \"../../../constants/status\";\nimport wrappedLayout from \"../../../containers/wrappedLayout\";\nimport Button from \"../../Button\";\nimport Spinner from \"../../Spinner\";\nimport \"./GameInitial.scss\";\n\nconst GameInitial = ({ initialGameSession, getQuestion, status, setStep }) => {\n  const starGame = () => {\n    initialGameSession();\n    getQuestion();\n    setStep();\n  };\n  const loader = status === LOADING_STATUS ? <Spinner /> : null;\n\n  const error =\n    status === FAILURE_STATUS ? (\n      <div>\n        Something went wrong... <br />\n        Please, try again.\n      </div>\n    ) : null;\n\n  const render =\n    status === SUCCESS_STATUS ? (\n      <>\n        <h1 className=\"game-initial__title\">Who wants to be a millionaire?</h1>\n        <div className=\"game-initial__action\">\n          <Button event={starGame}>Start</Button>\n        </div>\n      </>\n    ) : null;\n\n  return (\n    <div className=\"game-initial\">\n      {loader}\n      {error}\n      {render}\n    </div>\n  );\n};\n\nconst layoutConfig = {\n  image: true,\n  parallax: true,\n  backgroundFigure: true,\n};\n\nexport default wrappedLayout(layoutConfig)(GameInitial);\n","import GameResult from \"./GameResult\";\n\nexport default GameResult;\n","import React from \"react\";\nimport wrappedLayout from \"../../../containers/wrappedLayout\";\nimport Button from \"../../Button\";\nimport \"./GameResult.scss\";\n\nconst GameResult = ({ score, steps, resetGame, status }) => {\n  let win = steps.find(el => el.id === score - 1);\n\n  return (\n    <div className=\"game-result\">\n      <div className=\"game-result__score\">\n        <div className=\"game-result__score-label\">Total score:</div>\n        <div className=\"game-result__score-value\">${win?.cost || 0} earned</div>\n      </div>\n      <div className=\"game-result__action\">\n        <Button event={resetGame}>Try again...</Button>\n      </div>\n    </div>\n  );\n};\n\nconst layoutConfig = {\n  image: true,\n  parallax: true,\n  backgroundFigure: false,\n};\n\nexport default wrappedLayout(layoutConfig)(GameResult);\n","export const PREFIXES = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"];\r\n","import React from \"react\";\nimport \"./MenuButton.scss\";\n\nconst MenuButton = ({ openMenu }) => (\n  <div className={`menu-button ${openMenu ? \"is-open\" : \"\"}`}>\n    <div className=\"menu-button__line\"></div>\n  </div>\n);\n\nexport default MenuButton;\n","import GamePanel from \"./GamePanel\";\n\nexport default GamePanel;\n","import React from \"react\";\nimport { formatPrice } from \"../../../common/formatPrice\";\nimport \"./GamePanel.scss\";\n\nconst GamePanel = ({ panelSteps, currentStep }) => {\n  const list = panelSteps.map(({ id, status, cost }) => {\n    return (\n      <div key={id} className={`game-panel__item ${status}`}>\n        <div className=\"game-panel__label\">\n          <div className=\"game-panel__decor-arrow game-panel__decor-arrow--left\"></div>\n          <div className=\"game-panel__decor-arrow game-panel__decor-arrow--right\"></div>\n          <div className=\"game-panel__value\">$ {formatPrice(cost)}</div>\n        </div>\n      </div>\n    );\n  });\n\n  return <div className=\"game-panel\">{list}</div>;\n};\n\nexport default GamePanel;\n","export function formatPrice(num) {\r\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n}\r\n","import GameSteps from \"./GameSteps\";\n\nexport default GameSteps;\n","import React, { useState } from \"react\";\nimport { PREFIXES } from \"../../../constants/prefixes\";\nimport wrappedLayout from \"../../../containers/wrappedLayout\";\nimport MenuButton from \"../../MenuButton/MenuButton\";\nimport GamePanel from \"../GamePanel\";\nimport \"./GameSteps.scss\";\n\nconst GameSteps = ({\n  panelSteps,\n  currentQuestion,\n  currentStep,\n  checkAnswer,\n  canSelect,\n  debug,\n}) => {\n  const [openMenu, setOpenMenu] = useState(false);\n  const { question, answers } = currentQuestion;\n\n  const handleSelect = (e, answer, idx) => {\n    if (!canSelect) {\n      e.stopPropagation();\n      return false;\n    }\n    checkAnswer(answer, idx);\n  };\n\n  const handleToggleMenu = () => {\n    setOpenMenu(!openMenu);\n  };\n\n  return (\n    <div className={`game-steps ${openMenu ? \"is-open\" : \"\"}`}>\n      <div className=\"game-steps__menu\" onClick={handleToggleMenu}>\n        <MenuButton openMenu={openMenu} />\n      </div>\n\n      <div className=\"game-steps__body\">\n        <div className=\"game-steps__question\">\n          {question}\n          {debug && (\n            <div className=\"game-steps__question-debug\">\n              ({currentQuestion.correct.join(\", \")})\n            </div>\n          )}\n        </div>\n        <div className=\"game-steps__answers\">\n          {answers.map((answer, idx) => (\n            <div\n              key={idx}\n              className={`game-steps__answer ${answer.status}`}\n              onClick={e => handleSelect(e, answer.answer, idx)}\n            >\n              <div className=\"game-steps__answer-label\">\n                <div className=\"game-steps__answer-decor-arrow game-steps__answer-decor-arrow--left\"></div>\n                <div className=\"game-steps__answer-decor-arrow game-steps__answer-decor-arrow--right\"></div>\n                <div className=\"game-steps__answer-value\">\n                  <div className=\"game-steps__answer-prefix\">{PREFIXES[idx]}</div>\n                  {answer.answer}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className={`game-steps__sidebar ${openMenu ? \"is-open\" : \"\"}`}>\n        <GamePanel currentStep={currentStep} panelSteps={panelSteps} />\n      </div>\n    </div>\n  );\n};\nconst layoutConfig = {\n  image: false,\n  parallax: false,\n  backgroundFigure: false,\n};\n\nexport default wrappedLayout(layoutConfig)(GameSteps);\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  IDLE_STATUS,\r\n  GAME_START_STATUS,\r\n  GAME_PLAY_STATUS,\r\n  GAME_END_STATUS,\r\n} from \"../../constants/status\";\r\nimport wrappedGame from \"../../containers/wrappedGame\";\r\nimport GameInitial from \"./GameInitial\";\r\nimport GameResult from \"./GameResult\";\r\nimport GameSteps from \"./GameSteps\";\r\nimport \"./Game.scss\";\r\n\r\nfunction Game({\r\n  status,\r\n  gameStatus,\r\n  getConfig,\r\n  initialGameSession,\r\n  score,\r\n  steps,\r\n  currentQuestion,\r\n  getQuestion,\r\n  currentStep,\r\n  setStep,\r\n  checkAnswer,\r\n  canSelect,\r\n  resetGame,\r\n  debug,\r\n}) {\r\n  useEffect(() => {\r\n    if (status === IDLE_STATUS) {\r\n      let debug = localStorage.getItem(\"debug\");\r\n      getConfig(debug);\r\n    }\r\n  }, [getConfig, status]);\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {gameStatus === GAME_START_STATUS && (\r\n        <GameInitial\r\n          status={status}\r\n          getQuestion={getQuestion}\r\n          setStep={setStep}\r\n          initialGameSession={initialGameSession}\r\n        />\r\n      )}\r\n\r\n      {gameStatus === GAME_PLAY_STATUS && (\r\n        <GameSteps\r\n          currentStep={currentStep}\r\n          panelSteps={steps}\r\n          currentQuestion={currentQuestion}\r\n          checkAnswer={checkAnswer}\r\n          canSelect={canSelect}\r\n          debug={debug}\r\n        />\r\n      )}\r\n\r\n      {gameStatus === GAME_END_STATUS && (\r\n        <GameResult status={status} resetGame={resetGame} steps={steps} score={score} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default wrappedGame(Game);\r\n","import Game from \"./Game\";\r\n\r\nexport default Game;\r\n","import {\r\n  ANSWER_FAILURE_STATUS,\r\n  ANSWER_SELECTED_STATUS,\r\n  ANSWER_SUCCESS_STATUS,\r\n  FAILURE_STATUS,\r\n  GAME_END_STATUS,\r\n  GAME_PLAY_STATUS,\r\n  GAME_START_STATUS,\r\n  IDLE_STATUS,\r\n  LOADING_STATUS,\r\n  STEP_ACTIVE_STATUS,\r\n  STEP_DISABLED_STATUS,\r\n  SUCCESS_STATUS,\r\n} from \"../constants/status\";\r\nimport {\r\n  GET_CONFIG_FAIL,\r\n  GET_CONFIG_REQUEST,\r\n  GET_CONFIG_SUCCESS,\r\n  GET_QUESTION,\r\n  HANDLE_ANSWER_FAIL,\r\n  HANDLE_ANSWER_START,\r\n  HANDLE_ANSWER_SUCCESS,\r\n  INITIAL_GAME_SESSION,\r\n  RESET_GAME,\r\n  SET_END_GAME,\r\n  SET_STEP,\r\n} from \"../constants/types\";\r\n\r\nconst initialState = {\r\n  status: IDLE_STATUS,\r\n  error: null,\r\n  data: null,\r\n\r\n  steps: [],\r\n  currentStep: 0,\r\n  score: 0,\r\n  gameStatus: GAME_START_STATUS,\r\n  sessionQuestions: [],\r\n  currentQuestion: {},\r\n  canSelect: false,\r\n  debug: false,\r\n};\r\n\r\nexport function gameReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CONFIG_REQUEST:\r\n      const debug = action.payload === \"true\";\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        status: LOADING_STATUS,\r\n        debug: debug,\r\n      };\r\n\r\n    case GET_CONFIG_FAIL:\r\n      return { ...state, error: action.payload.message, status: FAILURE_STATUS };\r\n\r\n    case GET_CONFIG_SUCCESS:\r\n      return { ...state, data: action.payload.game, status: SUCCESS_STATUS };\r\n\r\n    case INITIAL_GAME_SESSION:\r\n      return {\r\n        ...state,\r\n        currentStep: 0,\r\n        sessionQuestions: action.payload.questions,\r\n        steps: action.payload.steps,\r\n        gameStatus: GAME_START_STATUS,\r\n      };\r\n\r\n    case GET_QUESTION:\r\n      return {\r\n        ...state,\r\n        currentQuestion: action.payload,\r\n        gameStatus: GAME_PLAY_STATUS,\r\n        canSelect: true,\r\n      };\r\n\r\n    case SET_STEP:\r\n      return {\r\n        ...state,\r\n        currentStep: action.payload,\r\n        steps: state.steps.map(el => {\r\n          if (action.payload > 0 && el.id === action.payload - 1) {\r\n            return { ...el, status: STEP_DISABLED_STATUS };\r\n          } else if (el.id === action.payload) {\r\n            return { ...el, status: STEP_ACTIVE_STATUS };\r\n          } else {\r\n            return el;\r\n          }\r\n        }),\r\n      };\r\n\r\n    case HANDLE_ANSWER_START:\r\n      return {\r\n        ...state,\r\n        canSelect: false,\r\n        currentQuestion: {\r\n          ...state.currentQuestion,\r\n          answers: state.currentQuestion.answers.map((el, idx) =>\r\n            idx === action.payload ? { ...el, status: ANSWER_SELECTED_STATUS } : el,\r\n          ),\r\n        },\r\n      };\r\n\r\n    case HANDLE_ANSWER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        score: state.score + 1,\r\n        currentQuestion: {\r\n          ...state.currentQuestion,\r\n          answers: state.currentQuestion.answers.map((el, idx) =>\r\n            idx === action.payload ? { ...el, status: ANSWER_SUCCESS_STATUS } : el,\r\n          ),\r\n        },\r\n      };\r\n\r\n    case HANDLE_ANSWER_FAIL:\r\n      const correctAnswers = state.currentQuestion.correct;\r\n      const answers = state.currentQuestion.answers;\r\n      let correctIdxs = [];\r\n      correctAnswers.forEach(el => {\r\n        let indexs = answers.findIndex(x => x.answer === el);\r\n        correctIdxs.push(indexs);\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        currentQuestion: {\r\n          ...state.currentQuestion,\r\n          answers: state.currentQuestion.answers.map((el, idx) => {\r\n            if (idx === action.payload) {\r\n              return { ...el, status: ANSWER_FAILURE_STATUS };\r\n            } else if (correctIdxs.includes(idx)) {\r\n              return { ...el, status: ANSWER_SUCCESS_STATUS };\r\n            } else {\r\n              return el;\r\n            }\r\n          }),\r\n        },\r\n      };\r\n\r\n    case SET_END_GAME:\r\n      return {\r\n        ...state,\r\n        gameStatus: GAME_END_STATUS,\r\n      };\r\n\r\n    case RESET_GAME:\r\n      return {\r\n        ...state,\r\n        steps: [],\r\n        currentStep: 0,\r\n        score: 0,\r\n        gameStatus: GAME_START_STATUS,\r\n        sessionQuestions: [],\r\n        currentQuestion: {},\r\n        canSelect: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { gameReducer } from \"./game\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  game: gameReducer,\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers\";\r\n\r\n// Store\r\nconst composeEnhancers =\r\n  (process.env.NODE_ENV === \"development\"\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : null) || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, logger)));\r\n\r\nexport { store };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Game from \"./components/Game\";\r\nimport { store } from \"./store\";\r\nimport \"../node_modules/ress/ress.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Game />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}